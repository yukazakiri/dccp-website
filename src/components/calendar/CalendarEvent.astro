---
import type { CalendarEvent } from '../../data/academic-calendar';
import { format, parseISO } from 'date-fns';

interface Props {
  event: CalendarEvent;
}

const { event } = Astro.props;

const categoryColors = {
  academic: 'bg-blue-50 text-blue-900 border-blue-100',
  holiday: 'bg-red-50 text-red-900 border-red-100',
  exam: 'bg-purple-50 text-purple-900 border-purple-100',
  event: 'bg-green-50 text-green-900 border-green-100',
  enrollment: 'bg-orange-50 text-orange-900 border-orange-100'
};

const formatDate = (dateStr: string) => {
  const date = parseISO(dateStr);
  return format(date, 'MMM dd');
};
---

<div 
  class={`event-card group relative p-5 rounded-xl border ${categoryColors[event.category]} 
          hover:shadow-md transition-all duration-200`}
  data-category={event.category}
>
  <div class="flex justify-between items-start gap-4">
    <div class="flex-1">
      <h3 class="text-base font-semibold leading-tight mb-2">
        {event.title}
      </h3>
      {event.description && (
        <p class="text-sm text-gray-700/90 line-clamp-2 group-hover:line-clamp-none transition-all duration-200">
          {event.description}
        </p>
      )}
    </div>
    <span class={`shrink-0 text-xs px-3 py-1 rounded-full bg-white/70 backdrop-blur-sm font-medium capitalize
                  shadow-sm border border-current/10`}>
      {event.category}
    </span>
  </div>
  
  <div class="mt-4 flex flex-wrap items-center gap-4 text-sm text-gray-700/90">
    <span class="inline-flex items-center">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1.5 opacity-80" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
      </svg>
      {event.endDate ? (
        <span>{formatDate(event.startDate)} - {formatDate(event.endDate)}</span>
      ) : (
        <span>{formatDate(event.startDate)}</span>
      )}
    </span>
    
    {event.location && (
      <span class="inline-flex items-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1.5 opacity-80" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
        </svg>
        <span>{event.location}</span>
      </span>
    )}
  </div>
</div>
